<?php

namespace Acted\LegalDocsBundle\Repository;
use Acted\LegalDocsBundle\Entity\RefCountry;
use Acted\LegalDocsBundle\Entity\RefCity;
use Acted\LegalDocsBundle\Entity\RefRegion;

/**
 * RefCityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefCityRepository extends \Doctrine\ORM\EntityRepository
{

    public function findByCountry(RefCountry $country)
    {
        return $this->createQueryBuilder('c')
            ->join('c.region', 'r')
//            ->join('r.country', 'country')
            ->where('r.country = :country')
            ->setParameter('country', $country)
            ->getQuery()
            ->getResult();
    }

    public function createCity($cityName, RefRegion $region, $lat, $lng)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $params = array('cityName' => $cityName);

        $qb->from('ActedLegalDocsBundle:RefCity', 'city');
        $qb->select('city');
        $qb->where($qb->expr()->eq('city.name', ':cityName'));

        $qb->setParameters($params);

        $city = $qb->getQuery()->getOneOrNullResult();
        if (!empty($city) && !empty($city->getName())) {
            return $city->getId();
        }

        $cityObj = new RefCity();
        $cityObj->setRegion($region);
        $cityObj->setName($cityName);
        $cityObj->setLatitude($lat);
        $cityObj->setLongitude($lng);
        $em->persist($cityObj);

        $em->flush();

        return $cityObj->getId();
    }
}
