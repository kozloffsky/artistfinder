<?php

namespace Acted\LegalDocsBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * ChatRoomRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChatRoomRepository extends EntityRepository
{
    /**
     * @param $event
     * @param $user
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getChatByParams($event, $user)
    {
        return $this->createQueryBuilder('c')
            ->andWhere('c.user = :userId')
            ->andWhere('c.event = :eventId')
            ->setParameters([
                'userId' => $user->getId(),
                'eventId' => $event->getId()
            ])
            ->getQuery()->getOneOrNullResult();
    }

    /**
     * @param $userId
     * @param $filter
     * @return array
     */
    public function getChatRoomByParams($userId, $filter)
    {
        $query = $this->createQueryBuilder('c')
            ->where('c.user = :userId')
            ->setParameter('userId', $userId)
            ;
        switch ($filter){
            case 'archived':
                $query->innerJoin('c.message', 'm')
                    ->andWhere('m.readDateTime IS NOT null')
                ;
                break;
            case 'unread':
                $query->innerJoin('c.message', 'm')
                    ->andWhere('m.readDateTime IS null')
                ;
                break;
            default:
                break;
        }

        return $query->getQuery()->getResult();
    }
}
