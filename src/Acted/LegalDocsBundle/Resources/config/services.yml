services:
    contract_type:
        class: Acted\LegalDocsBundle\Services\ContractTypeService
        arguments: ["@service_container", "@tfox.mpdfport", "contract"]
        calls:
          - [setSavePath, ['%performancecontract_dir%']]
        folder: %kernel.root_dir%
    invoice_type:
        class: Acted\LegalDocsBundle\Services\InvoiceTypeService
        arguments: ["@service_container", "@tfox.mpdfport", "invoice"]
        calls:
            - [setSavePath, ['%invoice_dir%']]
        folder: %kernel.root_dir%
    quotation_type:
        class: Acted\LegalDocsBundle\Services\QuotationTypeService
        arguments: ["@service_container", "@tfox.mpdfport", "quotation"]
        calls:
            - [setSavePath, ['%quotation_dir%']]
        folder: %kernel.root_dir%
    request_quotation_type:
        class: Acted\LegalDocsBundle\Services\RequestQuotationTypeService
        arguments: ["@service_container", "@tfox.mpdfport", "request_quotation"]
        calls:
            - [setSavePath, ['%request_quotation_dir%']]
        folder: %kernel.root_dir%

    acted_legal_docs.model.order_manager:
        class: Acted\LegalDocsBundle\Model\OrderManager
        arguments: ["@doctrine.orm.entity_manager","@gos_web_socket.zmq.pusher"]
        tags:
          - { name: doctrine.event_listener, event: postPersist }

    ####### RPC #############
    socket_chat.rpc_server:
        class: Acted\LegalDocsBundle\RPC\SocketChat
        tags:
            - { name: gos_web_socket.rpc }

    socket_chat.rpc_topic:
        class: Acted\LegalDocsBundle\RPC\ActedTopic
        tags:
            - { name: gos_web_socket.topic }

    gos_web_socket_server.client_event.listener:
        class: Acted\LegalDocsBundle\EventListener\ChatEventListener
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.client_connected', method: onClientConnect }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_disconnected', method: onClientDisconnect }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_error', method: onClientError }
            - { name: kernel.event_listener, event: 'gos_web_socket.server_launched', method: onServerStart }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_rejected', method: onClientRejected }

    file_uploader:
        class: Acted\LegalDocsBundle\Service\FileUploader
        arguments: [ @doctrine.orm.entity_manager, @request_stack, @kernel, "%document_technical_requirements_dir%" ]
